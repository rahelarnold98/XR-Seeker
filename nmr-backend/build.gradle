plugins {
    id "org.jetbrains.kotlin.jvm" version "$version_kotlin"
    id "org.jetbrains.kotlin.plugin.serialization" version "$version_kotlin"
}

apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'

kotlin {
    jvmToolchain(17)
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    /* Kotlinx Extensions */
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: version_kotlinx_coroutines
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-json-jvm', version: version_kotlinx_json_jvm

    /* vitrivr engine. */
    //implementation group: 'org.vitrivr', name: 'vitrivr-engine-base', version: version_vitrivr
    implementation group: 'org.vitrivr', name: 'vitrivr-engine-core', version: version_vitrivr
    implementation group: 'org.vitrivr', name: 'vitrivr-engine-index', version: version_vitrivr
    implementation group: 'org.vitrivr', name: 'vitrivr-engine-plugin-features', version: version_vitrivr
    implementation group: 'org.vitrivr', name: 'vitrivr-engine-query', version: version_vitrivr
    implementation group: 'org.vitrivr', name: 'vitrivr-engine-plugin-cottontaildb', version: version_vitrivr
    implementation group: 'org.vitrivr', name: 'vitrivr-engine-plugin-m3d', version: version_vitrivr

    /* Cottontail DB Driver + gRCP */
    implementation group: 'org.vitrivr', name: 'cottontaildb-client', version: version_cottontaildb_driver
    implementation group: 'io.grpc', name: 'grpc-all', version: version_grpc
    implementation group: 'io.grpc', name: 'grpc-kotlin-stub', version: version_grpc_kotlin
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: version_protobuf

    /* Java CV. */
    implementation group: 'org.bytedeco', name: 'javacv-platform', version: version_javacv

    /* Min.IO */
    implementation group: 'io.minio', name: 'minio', version: version_minio

    /* Javalin */
    implementation group: 'io.javalin', name: 'javalin', version: version_javalin
    implementation group: 'io.javalin.community.openapi', name: 'javalin-openapi-plugin', version: version_javalin
    implementation group: 'io.javalin.community.openapi', name: 'javalin-swagger-plugin', version: version_javalin
    implementation group: 'io.javalin.community.ssl', name: 'ssl-plugin', version: version_javalin
    kapt("io.javalin.community.openapi:openapi-annotation-processor:$version_javalin")

    /* Log4j2 & Slf4j */
    implementation group: 'org.slf4j', name: 'slf4j-api', version: version_slf4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: version_log4j2
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: version_log4j2
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: version_log4j2

    /* JUnit 5 */
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: version_junit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: version_junit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: version_junit
    testImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: version_junit_platform

    /* Clikt */
    implementation group: 'com.github.ajalt', name: 'clikt', version: version_clikt

    /* JLine */
    implementation group: 'org.jline', name: 'jline', version: version_jline

    /* Gson */
    implementation 'com.google.code.gson:gson:2.8.8'

}

/* Application properties. */
sourceCompatibility = 17

/* General application attributes. */
application {
    applicationName = 'nmr'
    mainClassName = 'eu.xreco.nmr.backend.MainKt'
    applicationDefaultJvmArgs = ["-Xms2G", "-Xmx8G"]
}

/* Default names for distributions. */
distZip.archiveFileName = 'nmr-backend.zip'
distTar.archiveFileName = 'nmr-backend.tar'

/* Configuration for frontend classpath files (see dependencies). */
configurations {
    frontendClasspath {
        canBeConsumed = false
        canBeResolved = true
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

kapt {
    correctErrorTypes true
    useBuildCache true
}

test {
    useJUnitPlatform()
}

tasks.register("prepareKotlinBuildScriptModel") {}
